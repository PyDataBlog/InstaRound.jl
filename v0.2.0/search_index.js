var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = InstaRound","category":"page"},{"location":"#InstaRound","page":"Home","title":"InstaRound","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for InstaRound.","category":"page"},{"location":"","page":"Home","title":"Home","text":"A simple package for extending Base.round with instagram like rounding.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install InstaRound either do","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"InstaRound\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"or switch to Pkg mode with ] and issue","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add InstaRound","category":"page"},{"location":"#Basic-Usage","page":"Home","title":"Basic Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Round numbers with IGRound","category":"page"},{"location":"","page":"Home","title":"Home","text":"using InstaRound\n\njulia> round(IGRound, 1_000_000; names=false)\n\"1.0M\"\n\njulia> round(IGRound, 1_000_000; names=true)\n\"1.0 Million\"","category":"page"},{"location":"#Practical-Use-Case","page":"Home","title":"Practical Use Case","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using InstaRound\nusing PolygonIO\nusing DataFrames\n\n\nopts = PolyOpts(API_KEY, DataFrame)\nbars_df = crypto_aggregates_bars(opts, \"X:BTCUSD\", 5, \"minute\", \"2020-10-14\", \"2020-10-16\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> round.(IGRound, bars_df.c; names=false)\n24-element Vector{String}:\n \"11.42K\"\n \"11.42K\"\n \"11.44K\"\n \"11.45K\"\n \"11.45K\"\n \"11.45K\"\n \"11.45K\"\n ⋮\n \"11.44K\"\n \"11.44K\"\n \"11.44K\"\n \"11.45K\"\n \"11.45K\"\n \"11.45K\"\n \"11.44K\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> round.(IGRound, bars_df.c; names=true)\n24-element Vector{String}:\n \"11.42 Thousand\"\n \"11.42 Thousand\"\n \"11.44 Thousand\"\n \"11.45 Thousand\"\n \"11.45 Thousand\"\n \"11.45 Thousand\"\n \"11.45 Thousand\"\n ⋮\n \"11.44 Thousand\"\n \"11.44 Thousand\"\n \"11.44 Thousand\"\n \"11.45 Thousand\"\n \"11.45 Thousand\"\n \"11.45 Thousand\"\n \"11.44 Thousand\"\n","category":"page"},{"location":"#Abbreviation-Source","page":"Home","title":"Abbreviation Source","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Abbreviation Name Value Equivalent\nK Thousand (Kilo) 10^3 1000\nM Million 10^6 1000K\nB Billion 10^9 1000M\nt Trillion 10^12 1000B\nq Quadrillion 10^15 1000t\nQ Quintillion 10^18 1000q\ns Sextillion 10^21 1000Q\nS Septillion 10^24 1000s\no Octillion 10^27 1000S\nn Nonillion 10^30 1000o\nd Decillion 10^33 1000n\nU Undecillion 10^36 1000d\nD Duodecillion 10^39 1000U\nT Tredecillion 10^42 1000D\nQt Quattuordecillion 10^45 1000T\nQd Quindecillion 10^48 1000Qt\nSd Sexdecillion 10^51 1000Qd\nSt Septendecillion 10^54 1000Sd\nO Octodecillion 10^57 1000St\nN Novemdecillion 10^60 1000O\nv Vigintillion 10^63 1000N\nc Unvigintillion 10^66 1000v","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [InstaRound]","category":"page"},{"location":"#InstaRound.IGRound","page":"Home","title":"InstaRound.IGRound","text":"IGRound\n\nAbstract base type for dispatched InstaRound rounds.\n\n\n\n\n\n","category":"type"},{"location":"#Base.round-Tuple{Type{IGRound}, Number}","page":"Home","title":"Base.round","text":"round(::Type{IGRound}, x::Number; names::Bool=false)\n\nFunction to round a number x to the nearest IG style.\n\nArguments\n\nx: The number to be rounded.\nnames: If true, the unit will be names, if false, the unit will be the number.\n\nExample\n\njulia> round(IGRound, 100_000; names=true)\n\"100Thousand\"\n\n\n\n\n\n","category":"method"},{"location":"#InstaRound.business_round-Tuple{Number, Bool}","page":"Home","title":"InstaRound.business_round","text":"business_round(number::Number, names::Bool)\n\nInternal function to round a number (num) to the nearest IG style.\n\n\n\n\n\n","category":"method"},{"location":"#InstaRound.extract_identifying_unit-Tuple{Number, Bool}","page":"Home","title":"InstaRound.extract_identifying_unit","text":"extract_identifying_unit(num::Number, names::Bool)\n\nInternal function to extract the identifying unit from a number.\n\n\n\n\n\n","category":"method"},{"location":"#InstaRound.log_transformer-Tuple{Any}","page":"Home","title":"InstaRound.log_transformer","text":"log_transformer(x)\n\nInternal function used to get the exponent of x. Used to select the nearest unit index.\n\n\n\n\n\n","category":"method"},{"location":"#InstaRound.number_groups-Tuple{AbstractString}","page":"Home","title":"InstaRound.number_groups","text":"number_groups(s::AbstractString)\n\nInternal function to extract the two groups of numbers from a '.' separated string.\n\n\n\n\n\n","category":"method"}]
}
